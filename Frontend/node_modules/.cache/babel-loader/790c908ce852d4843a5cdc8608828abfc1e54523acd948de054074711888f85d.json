{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chili\\\\Desktop\\\\Recipe-Relam\\\\Frontend\\\\src\\\\components\\\\chatbot\\\\Chatbot\\\\ActionProvider.js\";\nimport React from 'react';\nimport context from 'react-bootstrap/esm/AccordionContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ActionProvider = ({\n  createChatBotMessage,\n  setState,\n  children,\n  json_obj\n}) => {\n  // const greet = (msg) => {\n  //     const message = createChatBotMessage(msg);\n  //     updateState(message)\n  // }\n  // console.log({json_obj})\n  const description = json_obj;\n  const greet = async msg => {\n    try {\n      const response = await fetch('https://ecce-34-16-135-17.ngrok-free.app/chat', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          user_input: {\n            msg\n          },\n          context: description\n        })\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const data = await response.json();\n      const message = createChatBotMessage(data.response);\n      updateState(message);\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n  const updateState = (message, checker) => {\n    setState(prev => ({\n      ...prev,\n      messages: [...prev.messages, message],\n      checker\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: React.Children.map(children, child => {\n      return /*#__PURE__*/React.cloneElement(child, {\n        actions: {\n          greet\n        }\n      });\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n};\n_c = ActionProvider;\nexport default ActionProvider;\nvar _c;\n$RefreshReg$(_c, \"ActionProvider\");","map":{"version":3,"names":["React","context","jsxDEV","_jsxDEV","ActionProvider","createChatBotMessage","setState","children","json_obj","description","greet","msg","response","fetch","method","headers","body","JSON","stringify","user_input","ok","Error","status","data","json","message","updateState","error","console","checker","prev","messages","Children","map","child","cloneElement","actions","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/chili/Desktop/Recipe-Relam/Frontend/src/components/chatbot/Chatbot/ActionProvider.js"],"sourcesContent":["import React from 'react';\r\nimport context from 'react-bootstrap/esm/AccordionContext';\r\n\r\nconst ActionProvider = ({ createChatBotMessage, setState, children,json_obj}) => {\r\n\r\n    // const greet = (msg) => {\r\n    //     const message = createChatBotMessage(msg);\r\n    //     updateState(message)\r\n    // }\r\n    // console.log({json_obj})\r\n    const description=json_obj\r\n    const greet = async (msg) => {\r\n        try {\r\n            const response = await fetch('https://ecce-34-16-135-17.ngrok-free.app/chat', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({ user_input: { msg }, context:description })\r\n            });\r\n            if (!response.ok) {\r\n                throw new Error(`HTTP error! status: ${response.status}`);\r\n            }\r\n    \r\n            const data = await response.json();\r\n            const message = createChatBotMessage(data.response);\r\n            updateState(message);\r\n        } catch (error) {\r\n            console.error('Error:', error);\r\n        }\r\n    }\r\n    \r\n    \r\n    const updateState = (message, checker) => {\r\n        setState((prev) => ({\r\n            ...prev,\r\n            messages: [...prev.messages, message],\r\n            checker,\r\n        }))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {React.Children.map(children, (child) => {\r\n                return React.cloneElement(child, {\r\n                    actions: {\r\n                        greet\r\n                    },\r\n                });\r\n            })}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ActionProvider;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,OAAO,MAAM,sCAAsC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3D,MAAMC,cAAc,GAAGA,CAAC;EAAEC,oBAAoB;EAAEC,QAAQ;EAAEC,QAAQ;EAACC;AAAQ,CAAC,KAAK;EAE7E;EACA;EACA;EACA;EACA;EACA,MAAMC,WAAW,GAACD,QAAQ;EAC1B,MAAME,KAAK,GAAG,MAAOC,GAAG,IAAK;IACzB,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,+CAA+C,EAAE;QAC1EC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACL,cAAc,EAAE;QACpB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEC,UAAU,EAAE;YAAER;UAAI,CAAC;UAAEV,OAAO,EAACQ;QAAY,CAAC;MACrE,CAAC,CAAC;MACF,IAAI,CAACG,QAAQ,CAACQ,EAAE,EAAE;QACd,MAAM,IAAIC,KAAK,CAAC,uBAAuBT,QAAQ,CAACU,MAAM,EAAE,CAAC;MAC7D;MAEA,MAAMC,IAAI,GAAG,MAAMX,QAAQ,CAACY,IAAI,CAAC,CAAC;MAClC,MAAMC,OAAO,GAAGpB,oBAAoB,CAACkB,IAAI,CAACX,QAAQ,CAAC;MACnDc,WAAW,CAACD,OAAO,CAAC;IACxB,CAAC,CAAC,OAAOE,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;IAClC;EACJ,CAAC;EAGD,MAAMD,WAAW,GAAGA,CAACD,OAAO,EAAEI,OAAO,KAAK;IACtCvB,QAAQ,CAAEwB,IAAI,KAAM;MAChB,GAAGA,IAAI;MACPC,QAAQ,EAAE,CAAC,GAAGD,IAAI,CAACC,QAAQ,EAAEN,OAAO,CAAC;MACrCI;IACJ,CAAC,CAAC,CAAC;EACP,CAAC;EAED,oBACI1B,OAAA;IAAAI,QAAA,EACKP,KAAK,CAACgC,QAAQ,CAACC,GAAG,CAAC1B,QAAQ,EAAG2B,KAAK,IAAK;MACrC,oBAAOlC,KAAK,CAACmC,YAAY,CAACD,KAAK,EAAE;QAC7BE,OAAO,EAAE;UACL1B;QACJ;MACJ,CAAC,CAAC;IACN,CAAC;EAAC;IAAA2B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd,CAAC;AAACC,EAAA,GAjDIrC,cAAc;AAmDpB,eAAeA,cAAc;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}